name: Website Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # 每5分钟运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  check-websites:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Create config.js file
        run: |
          cat > config.js << 'EOL'
          module.exports = {
            uptimeRobotApiKey: process.env.UPTIMEROBOT_API_KEY,
            barkServerUrl: process.env.BARK_SERVER_URL || 'https://api.day.app',
            barkDeviceKey: process.env.BARK_DEVICE_KEY,
            cronSchedule: '*/5 * * * *',
            monitorIds: process.env.MONITOR_IDS ? process.env.MONITOR_IDS.split(',') : undefined,
            sendRecoveryNotifications: process.env.SEND_RECOVERY_NOTIFICATIONS !== 'false',
            downNotificationSound: process.env.DOWN_NOTIFICATION_SOUND || 'minuet',
            recoveryNotificationSound: process.env.RECOVERY_NOTIFICATION_SOUND || 'electric'
          };
          EOL
        
      - name: Run website check
        run: node index.js
        env:
          UPTIMEROBOT_API_KEY: ${{ secrets.UPTIMEROBOT_API_KEY }}
          BARK_DEVICE_KEY: ${{ secrets.BARK_DEVICE_KEY }}
          BARK_SERVER_URL: ${{ secrets.BARK_SERVER_URL }}
          MONITOR_IDS: ${{ secrets.MONITOR_IDS }}
          SEND_RECOVERY_NOTIFICATIONS: ${{ secrets.SEND_RECOVERY_NOTIFICATIONS }}
          DOWN_NOTIFICATION_SOUND: ${{ secrets.DOWN_NOTIFICATION_SOUND }}
          RECOVERY_NOTIFICATION_SOUND: ${{ secrets.RECOVERY_NOTIFICATION_SOUND }} 